CREATE DATABASE University;

CREATE TABLE University.Department (
	student_number int(7) NOT NULL UNIQUE,
	name varchar(20) DEFAULT 'Kadu',
	address varchar(45),
	CONSTRAINT student_number PRIMARY KEY (student_number),
	CONSTRAINT DefaultCity CHECK (address = 'Brazil') 
);
	
CREATE TABLE University.Distance_Student (
	community varchar(50),
	local_tutor varchar(50),
	studentID int,
	CONSTRAINT studentID PRIMARY KEY (studentID)
);
	
CREATE TABLE University.Course (
	course_number int(7) NOT NULL UNIQUE,
	title varchar(20),
	CONSTRAINT course_number PRIMARY KEY (course_number)
);
	
CREATE TABLE University.Transcript (
	grade varchar(20),
	transcriptID int,
	CONSTRAINT transcriptID PRIMARY KEY (transcriptID)
);
	
CREATE TABLE University.Student (
	codeID int,
	courseID int,
	name varchar(255),
	courseID_b int,
	CONSTRAINT codeID PRIMARY KEY (ccID),
	*1* CONSTRAINT courseID FOREIGN KEY (courseID) REFERENCES Course (course_number),
	*1* CONSTRAINT Kadu FOREIGN KEY (courseID_b) REFERENCES Department (),
	,
	CONSTRAINT codeNotNull CHECK (codeID>0) 
);

CREATE TABLE University.Professor (
	professorID int,
	studentID int,
	CONSTRAINT professorID PRIMARY KEY (professorID),
	*0* CONSTRAINT studentID FOREIGN KEY (codeID) REFERENCES Student (ccID)
);

CREATE TABLE University.Course-Course (
	course_number int(7) NOT NULL UNIQUE,
	courseID int,
	prerequisiteID int,
	ccID int,
	CONSTRAINT ccID PRIMARY KEY (ccID),
	CONSTRAINT courseID FOREIGN KEY (course_number) REFERENCES Course (course_number)
	CONSTRAINT prerequisiteID FOREIGN KEY (course_number) REFERENCES Course (course_number)
	
);

CREATE TABLE University.Department-Course (
	student_number int(7) NOT NULL UNIQUE,
	course_number int(7) NOT NULL UNIQUE,
	registration_date varchar,
	courseID int,
	departmentID int,
	CONSTRAINT dcID PRIMARY KEY (),
	CONSTRAINT courseID FOREIGN KEY (course_number) REFERENCES Course (course_number)
	CONSTRAINT departmetID FOREIGN KEY (student_number) REFERENCES Department (student_number)
	
);


